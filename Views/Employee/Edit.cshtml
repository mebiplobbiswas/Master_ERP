@model MASERP.Models.DATAMODEL.Employee
@{
    ViewBag.Title = "Edit Employee";
    ViewBag.page = "supplier";

    var workShiftingOptions = new List<SelectListItem> {
        new SelectListItem { Text = "Morning", Value = "Morning" },
        new SelectListItem { Text = "Night", Value = "Night" },
        new SelectListItem { Text = "General", Value = "General" }
    };

    var employmentTypeOptions = new List<SelectListItem> {
        new SelectListItem { Text = "Permanent", Value = "Permanent" },
        new SelectListItem { Text = "Contract", Value = "Contract" },
        new SelectListItem { Text = "Intern", Value = "Intern" }
    };

    var departmentOptions = new List<SelectListItem> {
        new SelectListItem { Text = "HR", Value = "HR" },
        new SelectListItem { Text = "Finance", Value = "Finance" },
        new SelectListItem { Text = "IT", Value = "IT" },
        new SelectListItem { Text = "Sales", Value = "Sales" },
        new SelectListItem { Text = "Admin", Value = "Admin" }
    };

    var maritalStatusOptions = new List<SelectListItem> {
        new SelectListItem { Text = "Single", Value = "Single" },
        new SelectListItem { Text = "Married", Value = "Married" },
        new SelectListItem { Text = "Divorced", Value = "Divorced" }
    };

    var isActiveOptions = new List<SelectListItem> {
        new SelectListItem { Text = "Active", Value = "true" },
        new SelectListItem { Text = "Inactive", Value = "false" }
    };
}

<h2 class="mb-4">Edit Employee</h2>

@using (Html.BeginForm("Edit", "Employee", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    @Html.HiddenFor(model => model.EmployeeId)

    <div class="card shadow-lg p-4">
        <div class="row">
            <div class="col-md-8">
                <div class="form-group mb-2">
                    @Html.LabelFor(m => m.Name)
                    @Html.TextBoxFor(m => m.Name, new { @class = "form-control", required = "required" })
                </div>

                <div class="form-group mb-2">
                    @Html.LabelFor(m => m.Designation)
                    @Html.DropDownList("Designation", (SelectList)ViewBag.DesignationList, "Select Designation", new { @class = "form-control", required = "required" })
                </div>

                <div class="form-group mb-2">
                    @Html.LabelFor(m => m.EmployeeCode)
                    @Html.TextBoxFor(m => m.EmployeeCode, new { @class = "form-control", required = "required" })
                </div>

                <div class="form-group mb-2">
                    @Html.LabelFor(m => m.JoiningDate)
                    @Html.TextBoxFor(m => m.JoiningDate, "{0:yyyy-MM-dd}", new { @class = "form-control", type = "date", required = "required" })
                </div>

                <div class="form-group mb-2">
                    @Html.LabelFor(m => m.DateOfBirth)
                    @Html.TextBoxFor(m => m.DateOfBirth, "{0:yyyy-MM-dd}", new { @class = "form-control", type = "date" })
                </div>

                <div class="form-group mb-2">
                    @Html.LabelFor(m => m.Gender)
                    @Html.DropDownListFor(m => m.Gender, new SelectList(new[] { "Male", "Female", "Other" }, Model.Gender), "Select Gender", new { @class = "form-control" })
                </div>

                <div class="form-group mb-2">
                    @Html.LabelFor(m => m.BloodGroup)
                    @Html.DropDownListFor(m => m.BloodGroup, new SelectList(new[] { "A+", "A-", "B+", "B-", "O+", "O-", "AB+", "AB-" }, Model.BloodGroup), "Select Blood Group", new { @class = "form-control" })
                </div>

                <div class="form-group mb-2">
                    @Html.LabelFor(m => m.NationalId)
                    @Html.TextBoxFor(m => m.NationalId, new { @class = "form-control" })
                </div>

                <div class="form-group mb-2">
                    @Html.LabelFor(m => m.ContactNumber)
                    @Html.TextBoxFor(m => m.ContactNumber, new { @class = "form-control", required = "required" })
                </div>

                <div class="form-group mb-2">
                    @Html.LabelFor(m => m.Email)
                    @Html.TextBoxFor(m => m.Email, new { @class = "form-control", type = "email" })
                </div>

                <div class="form-group mb-2">
                    @Html.LabelFor(m => m.EmergencyContact)
                    @Html.TextBoxFor(m => m.EmergencyContact, new { @class = "form-control" })
                </div>

                <div class="form-group mb-2">
                    @Html.LabelFor(m => m.PresentAddress)
                    @Html.TextAreaFor(m => m.PresentAddress, new { @class = "form-control", rows = 2 })
                </div>

                <div class="form-group mb-2">
                    @Html.LabelFor(m => m.PermanentAddress)
                    @Html.TextAreaFor(m => m.PermanentAddress, new { @class = "form-control", rows = 2 })
                </div>

                <div class="form-group mb-2">
                    @Html.LabelFor(m => m.WorkShifting)
                    @Html.DropDownListFor(m => m.WorkShifting, new SelectList(workShiftingOptions, "Value", "Text", Model.WorkShifting), "Select Work Shifting", new { @class = "form-control" })
                </div>

                <div class="form-group mb-2">
                    @Html.LabelFor(m => m.EmploymentType)
                    @Html.DropDownListFor(m => m.EmploymentType, new SelectList(employmentTypeOptions, "Value", "Text", Model.EmploymentType), "Select Employment Type", new { @class = "form-control" })
                </div>

                <div class="form-group mb-2">
                    @Html.LabelFor(m => m.Department)
                    @Html.DropDownListFor(m => m.Department, new SelectList(departmentOptions, "Value", "Text", Model.Department), "Select Department", new { @class = "form-control" })
                </div>

                <div class="form-group mb-2">
                    @Html.LabelFor(m => m.MaritalStatus)
                    @Html.DropDownListFor(m => m.MaritalStatus, new SelectList(maritalStatusOptions, "Value", "Text", Model.MaritalStatus), "Select Marital Status", new { @class = "form-control" })
                </div>

                <div class="form-group mb-3">
                    @Html.LabelFor(m => m.IsActive)
                    @Html.DropDownListFor(m => m.IsActive, new SelectList(isActiveOptions, "Value", "Text", Model.IsActive.ToString().ToLower()), new { @class = "form-control" })
                </div>
            </div>

            <div class="col-md-4 text-center">
                <label>Photo</label>
                <input type="file" name="ImageFile" class="form-control mb-2" onchange="previewImage(this)" />
                <img id="imgPreview" src="@Url.Content(Model.ImagePath ?? "~/Content/img/default-profile.png")" alt="Image" class="img-thumbnail border" style="max-width: 100%; height: auto;" />
            </div>
        </div>

        <div class="text-end mt-4">
            <button type="submit" class="btn btn-primary btn-sm px-4">Update</button>
            @Html.ActionLink("Cancel", "Index", null, new { @class = "btn btn-secondary btn-sm ms-2" })
        </div>
    </div>
}

@section Scripts {
    <script>
        function previewImage(input) {
            if (input.files && input.files[0]) {
                var reader = new FileReader();
                reader.onload = function (e) {
                    $('#imgPreview').attr('src', e.target.result).show();
                };
                reader.readAsDataURL(input.files[0]);
            }
        }
    </script>
}
